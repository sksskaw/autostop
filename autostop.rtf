{\rtf1\ansi\ansicpg949\cocoartf2693
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 import boto3\
rds = boto3.client('rds')\
\
def lambda_handler(event, context):\
\
    #Stop DB instances\
    dbs = rds.describe_db_instances()\
    for db in dbs['DBInstances']:\
        #Check if DB instance is not already stopped\
        if (db['DBInstanceStatus'] == 'available'):\
            DoNotStop=1\
            try:\
                GetTags=rds.list_tags_for_resource(ResourceName=db['DBInstanceArn'])['TagList']\
                for tags in GetTags:\
                #if tag "autostop=yes" is set for instance, stop it\
                    if(tags['Key'] == 'autostop' and tags['Value'] == 'yes'):\
                        result = rds.stop_db_instance(DBInstanceIdentifier=db['DBInstanceIdentifier'])\
                        print ("Stopping instance: \{0\}.".format(db['DBInstanceIdentifier']))\
                if(DoNotStop == 1):\
                    DoNotStop=1\
            except Exception as e:\
                print ("Cannot stop instance \{0\}.".format(db['DBInstanceIdentifier']))\
                print(e)\
                \
if __name__ == "__main__":\
    lambda_handler(None, None)}